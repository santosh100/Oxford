/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyProject1;

import static MyProject1.Admission.file;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author SANTOSH
 */
public class MoreDetails extends javax.swing.JFrame {
    PreparedStatement pstmt=null,pstmt2=null,idpstmt=null;  
    ResultSet rs=null,rs2=null,temprs=null,genidrs=null;
    int indicator=0;
    /**
     * Creates new form MoreDetails
     */
    public MoreDetails() {
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();        
        this.setLocationRelativeTo(null);        
     //   firstTime();     // Method call
            //OR
        idTextField.setText(StudentList.sid);
        selectData();
        setData();
        
        if(MainPage.option!=2){
            uploadButton.setEnabled(false);
        }
        if(MainPage.option!=3)
            deleteButton.setEnabled(false);
        if(MainPage.option==2){
            formnoTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            fstnameTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            lstnameTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            fnameTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            mnameTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            mobnoTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            hphoneTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            addTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            genderTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            mstatusTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            qualificationTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            tenthTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            twelthTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            ugTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            pgTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            dobTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            sectionTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            yearTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            regdTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            pay1TextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); 
            date1TextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            pay2TextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            date2TextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            pay3TextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
            date3TextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
        }                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        formnoTextField = new javax.swing.JTextField();
        fstnameTextField = new javax.swing.JTextField();
        lstnameTextField = new javax.swing.JTextField();
        fnameTextField = new javax.swing.JTextField();
        mnameTextField = new javax.swing.JTextField();
        mobnoTextField = new javax.swing.JTextField();
        hphoneTextField = new javax.swing.JTextField();
        genderTextField = new javax.swing.JTextField();
        mstatusTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        tenthTextField = new javax.swing.JTextField();
        twelthTextField = new javax.swing.JTextField();
        ugTextField = new javax.swing.JTextField();
        pgTextField = new javax.swing.JTextField();
        sectionTextField = new javax.swing.JTextField();
        dobTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        qualificationTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addTextArea = new javax.swing.JTextArea();
        yearTextField = new javax.swing.JTextField();
        regdTextField = new javax.swing.JTextField();
        showImagejLabel = new javax.swing.JLabel();
        uploadButton = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        pay1TextField = new javax.swing.JTextField();
        date1TextField = new javax.swing.JTextField();
        pay2TextField = new javax.swing.JTextField();
        date2TextField = new javax.swing.JTextField();
        pay3TextField = new javax.swing.JTextField();
        date3TextField = new javax.swing.JTextField();
        newidLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        mainMenuButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        FirstButton = new javax.swing.JButton();
        LastButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Form No");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Id");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("First Name");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Last Name");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Father's Name");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Mother's Name");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Mobile No");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Home Phone");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Address");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Gender");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Marital Status");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Tenth Percentage");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setText("Twelth Percentage");

        jLabel14.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel14.setText("UG Percentage");

        formnoTextField.setEditable(false);
        formnoTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        formnoTextField.setText("check year & change photo loc");
        formnoTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formnoTextFieldMouseClicked(evt);
            }
        });

        fstnameTextField.setEditable(false);
        fstnameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fstnameTextField.setText("image name will change");
        fstnameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fstnameTextFieldMouseClicked(evt);
            }
        });

        lstnameTextField.setEditable(false);
        lstnameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lstnameTextField.setText("image name will change");
        lstnameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstnameTextFieldMouseClicked(evt);
            }
        });

        fnameTextField.setEditable(false);
        fnameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fnameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fnameTextFieldMouseClicked(evt);
            }
        });

        mnameTextField.setEditable(false);
        mnameTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        mnameTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnameTextFieldMouseClicked(evt);
            }
        });

        mobnoTextField.setEditable(false);
        mobnoTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        mobnoTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mobnoTextFieldMouseClicked(evt);
            }
        });

        hphoneTextField.setEditable(false);
        hphoneTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        hphoneTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hphoneTextFieldMouseClicked(evt);
            }
        });

        genderTextField.setEditable(false);
        genderTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        genderTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                genderTextFieldMouseClicked(evt);
            }
        });

        mstatusTextField.setEditable(false);
        mstatusTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        mstatusTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mstatusTextFieldMouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel15.setText("PG Percentage");

        jLabel16.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel16.setText("DOB");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel17.setText("Section");

        tenthTextField.setEditable(false);
        tenthTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tenthTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenthTextFieldMouseClicked(evt);
            }
        });

        twelthTextField.setEditable(false);
        twelthTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        twelthTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                twelthTextFieldMouseClicked(evt);
            }
        });

        ugTextField.setEditable(false);
        ugTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ugTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ugTextFieldMouseClicked(evt);
            }
        });

        pgTextField.setEditable(false);
        pgTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pgTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pgTextFieldMouseClicked(evt);
            }
        });

        sectionTextField.setEditable(false);
        sectionTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        sectionTextField.setText("id will change");
        sectionTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sectionTextFieldMouseClicked(evt);
            }
        });

        dobTextField.setEditable(false);
        dobTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        dobTextField.setText("09-mar-1996");
        dobTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dobTextFieldMouseClicked(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel18.setText("Academic Year");

        jLabel19.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel19.setText("Regd Date");

        jLabel20.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel20.setText("Qualification");

        qualificationTextField.setEditable(false);
        qualificationTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        qualificationTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                qualificationTextFieldMouseClicked(evt);
            }
        });

        addTextArea.setEditable(false);
        addTextArea.setColumns(20);
        addTextArea.setLineWrap(true);
        addTextArea.setRows(5);
        addTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTextAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(addTextArea);

        yearTextField.setEditable(false);
        yearTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        yearTextField.setText("id will change");
        yearTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yearTextFieldMouseClicked(evt);
            }
        });

        regdTextField.setEditable(false);
        regdTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        regdTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regdTextFieldMouseClicked(evt);
            }
        });

        showImagejLabel.setBackground(new java.awt.Color(255, 255, 255));
        showImagejLabel.setText("                Photo");
        showImagejLabel.setOpaque(true);

        uploadButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        uploadButton.setText("Upload");
        uploadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadButtonMouseClicked(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel23.setText("Fay1");

        jLabel24.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel24.setText("Date1");

        jLabel25.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel25.setText("Pay2");

        jLabel26.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel26.setText("Date2");

        jLabel27.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel27.setText("Pay3");

        jLabel28.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel28.setText("Date3");

        jLabel35.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("                                           MORE DETAIL");

        idTextField.setEditable(false);
        idTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        idTextField.setText("auto genetated id can be changed by changing year and section");

        pay1TextField.setEditable(false);
        pay1TextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pay1TextField.setAutoscrolls(false);
        pay1TextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pay1TextFieldMouseClicked(evt);
            }
        });

        date1TextField.setEditable(false);
        date1TextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        date1TextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                date1TextFieldMouseClicked(evt);
            }
        });

        pay2TextField.setEditable(false);
        pay2TextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pay2TextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pay2TextFieldMouseClicked(evt);
            }
        });

        date2TextField.setEditable(false);
        date2TextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        date2TextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                date2TextFieldMouseClicked(evt);
            }
        });

        pay3TextField.setEditable(false);
        pay3TextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pay3TextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pay3TextFieldMouseClicked(evt);
            }
        });

        date3TextField.setEditable(false);
        date3TextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        date3TextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                date3TextFieldMouseClicked(evt);
            }
        });

        newidLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        newidLabel.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hphoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(mobnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5))
                                        .addGap(34, 34, 34)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fstnameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fnameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(formnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(mnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(jLabel12))
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel10))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mstatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(qualificationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tenthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(genderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel14))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ugTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(twelthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel15)
                                                    .addComponent(jLabel16))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(pgTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(dobTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(sectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(regdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(3, 3, 3)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(showImagejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(uploadButton)
                        .addGap(152, 152, 152))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pay2TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(date1TextField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pay3TextField, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(date2TextField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(date3TextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(pay1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newidLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(genderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(formnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel11)
                            .addComponent(mstatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(qualificationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(fstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(showImagejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tenthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(lstnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(uploadButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(fnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(twelthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel6)
                    .addComponent(mnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(ugTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel7)
                    .addComponent(mobnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(pgTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(pay2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(hphoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(dobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(date2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17)
                                .addComponent(sectionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(pay3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(date3TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(regdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 255));

        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setText("<< BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        mainMenuButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        mainMenuButton.setText("MAIN MENU");
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });

        previousButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        previousButton.setText("<<Previous");
        previousButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                previousButtonMouseClicked(evt);
            }
        });

        nextButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nextButton.setText("Next>>");
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonMouseClicked(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });

        FirstButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        FirstButton.setText("First");
        FirstButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FirstButtonMouseClicked(evt);
            }
        });

        LastButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        LastButton.setText("Last");
        LastButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LastButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jButton2)
                .addGap(113, 113, 113)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(FirstButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(LastButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(previousButton)
                .addGap(75, 75, 75)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(mainMenuButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(deleteButton)
                            .addComponent(FirstButton)
                            .addComponent(LastButton)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainMenuButton)
                            .addComponent(nextButton)
                            .addComponent(previousButton))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
            
  /****************************************************************************************/
    private int varifyData(String fieldname,String ans){
        int flag=0,j=1;        
        try{           
            if(fieldname.equalsIgnoreCase("FIRST_NAME")||fieldname.equalsIgnoreCase("LAST_NAME")||fieldname.equalsIgnoreCase("FATHER_NAME")||fieldname.equalsIgnoreCase("MOTHER_NAME")||fieldname.equalsIgnoreCase("GENDER")||fieldname.equalsIgnoreCase("MARITAL_STATUS")||fieldname.equalsIgnoreCase("QUALIFICATION")){
                int i=Integer.parseInt(ans);            
                 JOptionPane.showMessageDialog(null, "Wrong Input\nEnter Alphabets Only", "Modify Record", JOptionPane.WARNING_MESSAGE);                 
                flag=1;
            }            
        }catch(Exception e){               
         //   System.out.println("No problem it's character good"+e);                     
        }        
        return flag;
    }
    
    
    /********************************************************************************************/
    private void setData(){
        try{
            formnoTextField.setText(""+rs.getString("FORM_NO"));
                idTextField.setText(""+rs.getString("S_ID"));
                fstnameTextField.setText(""+rs.getString("FIRST_NAME"));
                lstnameTextField.setText(""+rs.getString("LAST_NAME"));
                fnameTextField.setText(""+rs.getString("FATHER_NAME"));
                mnameTextField.setText(""+rs.getString("MOTHER_NAME"));
                mobnoTextField.setText(""+rs.getString("MOBNO"));
                hphoneTextField.setText(""+rs.getString("HOME_PHONE"));
                addTextArea.setText(""+rs.getString("ADDRESS"));
                genderTextField.setText(""+rs.getString("GENDER"));
                mstatusTextField.setText(""+rs.getString("MARITAL_STATUS"));
                qualificationTextField.setText(""+rs.getString("QUALIFICATION"));
                tenthTextField.setText(""+rs.getString("TENTH"));
                twelthTextField.setText(""+rs.getString("TWELTH"));
                ugTextField.setText(""+rs.getString("UG"));
                pgTextField.setText(""+rs.getString("PG"));
                dobTextField.setText(""+rs.getString("DOB"));
                sectionTextField.setText(""+rs.getString("SECTION"));
                yearTextField.setText(""+rs.getString("A_YEAR"));
                regdTextField.setText(""+rs.getString("REGD_DATE"));
                
                System.out.println("before tab2");
                
                if(AdminControl.year>2016){
                                        
                    pay1TextField.setText(""+rs2.getString("PAY1"));
                    date1TextField.setText(""+rs2.getString("DATE1"));
                    pay2TextField.setText(""+rs2.getString("PAY2"));
                    date2TextField.setText(""+rs2.getString("DATE2"));
                    pay3TextField.setText(""+rs2.getString("PAY3"));
                    date3TextField.setText(""+rs2.getString("DATE3"));
                    System.out.println("aaya bhai2");
                }
                BufferedImage originalImg=ImageIO.read(new File(".\\test\\Record\\Student_Images\\Registered\\"+rs.getString("FIRST_NAME")+" "+rs.getString("LAST_NAME")+""+rs.getString("S_ID")+".jpg"));    // to read image do this
                ImageIcon icon=new ImageIcon(ImageProcessing.myResize(originalImg,showImagejLabel.getWidth(),showImagejLabel.getHeight()));
                    showImagejLabel.setIcon(icon);
        }catch(Exception e){
            System.out.println("problem inside setdata method "+e);
        }
        
    }
    
    /********************************************************************************************/
    private void modifyTab(String tabname,String fieldname){
        String ans="",pre="";  
        int flag=0,flag2=0;
        try{
            selectData();
            if(tabname.equalsIgnoreCase("ADMISSION_TABLE"))
                 pre=rs.getString(""+fieldname);
            else
                pre=rs2.getString(""+fieldname);
                
            ans=JOptionPane.showInputDialog(null,""+fieldname+":",""+pre);
            ans=ans.trim().toUpperCase();
      //      System.out.println("FATHER'S_name:  "+ans);
                        
            if(ans.equalsIgnoreCase(pre)||ans.equals(""))
                JOptionPane.showMessageDialog(null, "No chages made", "Modify Record", JOptionPane.PLAIN_MESSAGE);                
            else{
/* this line is for testing alphabets only*/ flag=varifyData(fieldname,ans);
                        System.out.println("Returned value is "+flag);
                        
                if(fieldname.equalsIgnoreCase("DOB")||fieldname.equalsIgnoreCase("REGD_DATE")||fieldname.equalsIgnoreCase("DATE1")||fieldname.equalsIgnoreCase("DATE2")||fieldname.equalsIgnoreCase("DATE3")){                
                   if(ans.length()!=11){ 
                       flag=1;
                       JOptionPane.showMessageDialog(null, "Wrong Input", "Modify Record", JOptionPane.INFORMATION_MESSAGE);                 
                   }
                }
                if(fieldname.equalsIgnoreCase("FORM_NO")){                    
                    flag2=MyCheck.checkAvailability(ans);
                    if(flag2==1){
                     //   flag=1;
                        JOptionPane.showMessageDialog(null,"Record already exists: Form Number = "+ans,"Record Duplication",JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                                
                int i=1;           
                if(flag!=1&&flag2!=1) // specially used to update date fields
                    i=JOptionPane.showConfirmDialog(null, "Are you sure, you want to modify ?\n\n "+pre+" to "+ans, "Modify", JOptionPane.CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(i==0&&flag!=1&&flag2!=1){    
                    pstmt=MyLogin.con.prepareStatement("update "+tabname+" set "+fieldname+"=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    
                    pstmt.setString(1, ans);
                    pstmt.setString(2, rs.getString("S_ID"));
                    int j = pstmt.executeUpdate();
                    if(j>0){
                 //       ImageProcessing.myRenameAndMove3(pre,ans,rs.getString("FIRST_NAME"),rs.getString("S_ID"));
                        JOptionPane.showMessageDialog(null, "Modified successfully\n\n [  "+pre+"  ]   to   [  "+ans+"  ]", "Modify", JOptionPane.PLAIN_MESSAGE);
                        selectData();
                        setData();      //Because if user changes any record more than one in order to make changes currect value of rs(Resultset should change)
                    }
                    else
                        System.out.println("Father name not changed");                    
                }                                        
                else{
                        System.out.println("you selected cancle button(data) not modified");
                }
            }            
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please Enter Numbers Only", "Modify Record", JOptionPane.INFORMATION_MESSAGE);
        }        
        catch(Exception e){
            
            System.out.println("father name"+e);
            JOptionPane.showMessageDialog(null, "No chages made", "Modify Record", JOptionPane.PLAIN_MESSAGE);
        }
    }
    /*******************************************************************************************/
    private void selectData(){        
        try{            
            pstmt=null;
            pstmt2=null;
            rs=null;
            rs2=null;           
            
            pstmt=MyLogin.con.prepareStatement("select * from ADMISSION_TABLE where A_YEAR=? and SECTION=? order by S_ID",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
            pstmt.setString(1, ""+AdminControl.year);
            pstmt.setString(2, Section.section);
     //       String santosh2=rs.getString("S_ID");
            String santosh2=idTextField.getText();
            rs=pstmt.executeQuery();
            pstmt.clearParameters();
                        
            while(rs.next()){
                if(santosh2.equalsIgnoreCase(rs.getString("S_ID")))                   
                    break;                                    
            }            
            if(AdminControl.year>2016){
                pstmt2=MyLogin.con.prepareStatement("select * from FEE_DETAIL_TABLE where S_ID like ? order by S_ID",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                String santosh=""+AdminControl.year+""+Section.section;         
                pstmt2.setString(1,"%"+santosh+"%");
                rs2=pstmt2.executeQuery();
                pstmt2.clearParameters();               
                while(rs2.next()){
                    if(santosh2.equalsIgnoreCase(rs2.getString("S_ID")))                    
                        break;                                   
                }               
            }
        }catch(Exception e){ 
            System.out.println("selectdata method"+e);
        }            
    }
    
    private void formnoTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formnoTextFieldMouseClicked
        // TODO add your handling code here:     
     if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","FORM_NO");
        }                   
          
    }//GEN-LAST:event_formnoTextFieldMouseClicked

    private void fstnameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fstnameTextFieldMouseClicked
        // TODO add your handling code here:
    //    particularDetail();      //Because if user changes any record more than one in order to make changes currect value of rs(Resultset should change)
      if(MainPage.option==2){
        String ans="",pre="";
        try{
            selectData();
            pre=rs.getString("FIRST_NAME");
            ans=JOptionPane.showInputDialog(null,"FIRST NAME : ",""+pre);
            ans=ans.trim().toUpperCase();        
            
            if(ans.equalsIgnoreCase(pre)||ans.equals(""))
                JOptionPane.showMessageDialog(null, "No chages made", "Modify Record", JOptionPane.PLAIN_MESSAGE);
            else{                     
/* this line is for testing alphabets only*/int flag=varifyData("FIRST_NAME",ans);
                        System.out.println("Returned value is "+flag);
                int i=1;
                if(flag!=1)
                    i=JOptionPane.showConfirmDialog(null, "Are you sure, you want to modify ?\n\n FIRST NAME:  "+pre+" to "+ans, "Modify First Name", JOptionPane.CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(i==0&&flag!=1){    
                    pstmt=MyLogin.con.prepareStatement("update ADMISSION_TABLE set FIRST_NAME=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    
                    pstmt.setString(1, ans);
                    pstmt.setString(2, rs.getString("S_ID"));
                    int j = pstmt.executeUpdate();
                    if(j>0){
                        ImageProcessing.myRenameAndMove2(pre,ans,rs.getString("LAST_NAME"),rs.getString("S_ID"));
                        JOptionPane.showMessageDialog(null, "First name successfully modified\n\n [ "+pre+" ] to [ "+ans+" ]", "Modify First Name", JOptionPane.PLAIN_MESSAGE);
                        selectData();
                        setData();      //Because if user changes any record more than one in order to make changes currect value of rs(Resultset should change)
                    }
                    else
                        System.out.println("first name not changed");                    
                }                                        
                else{
                        System.out.println("you selected cancle button");
                }                
            }            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No chages made  "+e, "Modify Record", JOptionPane.PLAIN_MESSAGE);
        }
      } 
    }//GEN-LAST:event_fstnameTextFieldMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        StudentList ob=new StudentList();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void lstnameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstnameTextFieldMouseClicked
        // TODO add your handling code here:
      if(MainPage.option==2){ 
        String ans="",pre="";        
        try{
            selectData();
            pre=rs.getString("LAST_NAME");
            ans=JOptionPane.showInputDialog(null,"LAST NAME : ",""+pre);
            ans=ans.trim().toUpperCase();
            System.out.println("L_name:  "+ans);
            
            if(ans.equalsIgnoreCase(pre)||ans.equals(""))
                JOptionPane.showMessageDialog(null, "No chages made", "Modify Record", JOptionPane.PLAIN_MESSAGE);
            else{
/* this line is for testing alphabets only*/ int flag=varifyData("LAST_NAME",ans);
                        System.out.println("Returned value is "+flag);
                int i=1;        
                if(flag!=1)                       
                    i=JOptionPane.showConfirmDialog(null, "Are you sure, you want to modify ?\n\n LAST NAME:  "+pre+" to "+ans, "Modify Last Name", JOptionPane.CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(i==0 && flag!=1){    
                    pstmt=MyLogin.con.prepareStatement("update ADMISSION_TABLE set LAST_NAME=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    
                    pstmt.setString(1, ans);
                    pstmt.setString(2, rs.getString("S_ID"));
                    int j = pstmt.executeUpdate();
                    if(j>0){
                        ImageProcessing.myRenameAndMove3(pre,ans,rs.getString("FIRST_NAME"),rs.getString("S_ID"));
                        JOptionPane.showMessageDialog(null, "Last name modified successfully\n\n [ "+pre+" ] to [ "+ans+" ]", "Modify Last Name", JOptionPane.PLAIN_MESSAGE);
                        selectData();
                        setData();      //Because if user changes any record more than one in order to make changes currect value of rs(Resultset should change)
                    }
                    else
                        System.out.println("last name not changed");                    
                }                                        
                else{
                        System.out.println("you selected cancle button");
                }                
            }            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No chages made  "+e, "Modify Record", JOptionPane.PLAIN_MESSAGE);
        }
      }  
    }//GEN-LAST:event_lstnameTextFieldMouseClicked

    private void fnameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fnameTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","FATHER_NAME");
        }      
   /*     String ans="",pre="";                   
        try{
            pre=rs.getString("FATHER_NAME");
            ans=JOptionPane.showInputDialog(null,"FATHER NAME : ",""+pre);
            ans=ans.trim().toUpperCase();
            System.out.println("FATHER'S_name:  "+ans);
            
            if(ans.equals(pre)||ans.equals(""))
                JOptionPane.showMessageDialog(null, "No chages made", "Modify Record", JOptionPane.PLAIN_MESSAGE);
            else{
                int i=JOptionPane.showConfirmDialog(null, "Are you sure, you want to modify ?\n\n FATHER'S NAME:  "+pre+" to "+ans, "Modify Father's Name", JOptionPane.CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(i==0){    
                    pstmt=MyLogin.con.prepareStatement("update ADMISSION_TABLE set FATHER_NAME=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    
                    pstmt.setString(1, ans);
                    pstmt.setString(2, rs.getString("S_ID"));
                    int j = pstmt.executeUpdate();
                    if(j>0){
                 //       ImageProcessing.myRenameAndMove3(pre,ans,rs.getString("FIRST_NAME"),rs.getString("S_ID"));
                        JOptionPane.showMessageDialog(null, "Father name modified successfully\n\n [ "+pre+" ] to [ "+ans+" ]", "Modify Father Name", JOptionPane.PLAIN_MESSAGE);
                        particularDetail();      //Because if user changes any record more than one in order to make changes currect value of rs(Resultset should change)
                    }
                    else
                        System.out.println("Father name not changed");                    
                }                                        
                else{
                        System.out.println("you selected cancle button");
                }
            }
            
        }catch(Exception e){
            System.out.println("father name"+e);
            JOptionPane.showMessageDialog(null, "No chages made", "Modify Record", JOptionPane.PLAIN_MESSAGE);
        } */
    }//GEN-LAST:event_fnameTextFieldMouseClicked

    private void mnameTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnameTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","MOTHER_NAME");
        }
    }//GEN-LAST:event_mnameTextFieldMouseClicked

    private void mobnoTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mobnoTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","MOBNO");
        }
    }//GEN-LAST:event_mobnoTextFieldMouseClicked

    private void hphoneTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hphoneTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","HOME_PHONE");
        }
    }//GEN-LAST:event_hphoneTextFieldMouseClicked

    private void addTextAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTextAreaMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","ADDRESS");
        }
    }//GEN-LAST:event_addTextAreaMouseClicked

    private void genderTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genderTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","GENDER");
        }
    }//GEN-LAST:event_genderTextFieldMouseClicked

    private void mstatusTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mstatusTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","MARITAL_STATUS");
        }
    }//GEN-LAST:event_mstatusTextFieldMouseClicked

    private void qualificationTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qualificationTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","QUALIFICATION");
        }
    }//GEN-LAST:event_qualificationTextFieldMouseClicked

    private void tenthTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenthTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","TENTH");
        }
    }//GEN-LAST:event_tenthTextFieldMouseClicked

    private void twelthTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twelthTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){                   
            modifyTab("ADMISSION_TABLE","TWELTH");
        }
    }//GEN-LAST:event_twelthTextFieldMouseClicked

    private void ugTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ugTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
            modifyTab("ADMISSION_TABLE","UG");
        }
    }//GEN-LAST:event_ugTextFieldMouseClicked

    private void pgTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pgTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
        modifyTab("ADMISSION_TABLE","PG");
        }
    }//GEN-LAST:event_pgTextFieldMouseClicked

    private void regdTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regdTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
        modifyTab("ADMISSION_TABLE","REGD_DATE");
        }
    }//GEN-LAST:event_regdTextFieldMouseClicked

    private void pay1TextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pay1TextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2&&AdminControl.year>2016){
        modifyTab("FEE_DETAIL_TABLE","PAY1");
        }
    }//GEN-LAST:event_pay1TextFieldMouseClicked

    private void pay2TextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pay2TextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2&&AdminControl.year>2016){
        modifyTab("FEE_DETAIL_TABLE","PAY2");
        }
    }//GEN-LAST:event_pay2TextFieldMouseClicked

    private void pay3TextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pay3TextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2&&AdminControl.year>2016){
        modifyTab("FEE_DETAIL_TABLE","PAY3");
        }
    }//GEN-LAST:event_pay3TextFieldMouseClicked

    private void dobTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dobTextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2){
        modifyTab("ADMISSION_TABLE","DOB");
        }
    }//GEN-LAST:event_dobTextFieldMouseClicked

    private void date1TextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_date1TextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2&&AdminControl.year>2016){
        modifyTab("FEE_DETAIL_TABLE","DATE1");
        }
    }//GEN-LAST:event_date1TextFieldMouseClicked

    private void date2TextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_date2TextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2&&AdminControl.year>2016){
        modifyTab("FEE_DETAIL_TABLE","DATE2");
        }
    }//GEN-LAST:event_date2TextFieldMouseClicked

    private void date3TextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_date3TextFieldMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2&&AdminControl.year>2016){
        modifyTab("FEE_DETAIL_TABLE","DATE3");
        }
    }//GEN-LAST:event_date3TextFieldMouseClicked

    private void yearTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearTextFieldMouseClicked
        
        JOptionPane.showMessageDialog(null, "Not Permitted to modify year because id will change", "Modify", JOptionPane.WARNING_MESSAGE);
        
  /*    if(MainPage.option==2){
        int i=JOptionPane.showConfirmDialog(null, "It's highly recommended that don't try to change Academic year(session)\nIf you change this,your Id will be changed\n\nDo you want to modify ? ","Modify Record", JOptionPane.CANCEL_OPTION);
        if(i==0){    
            String ans="",pre="";            
            try{
                selectData();
                pre=rs.getString("A_YEAR");
                ans=JOptionPane.showInputDialog(null, "Modify Academic year(session)", pre);                
                ans=ans.trim().toUpperCase();        
                       
                if(ans.equalsIgnoreCase(pre)||ans.equals("")||ans.length()!=4)
                    JOptionPane.showMessageDialog(null, "Wrong input No chages made", "Modify Record", JOptionPane.ERROR_MESSAGE);
                else{                                       //*****************generating sid                        
                       int checkint=Integer.parseInt(ans);
                        
                        String sid="";
                        try{ 
                            genidrs=null;
                            idpstmt=MyLogin.con.prepareStatement("select S_ID from ADMISSION_TABLE where A_YEAR=? and SECTION=? order by S_ID",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
                            idpstmt.setString(1, ""+ans);
                            idpstmt.setString(2, Section.section);
                            genidrs=idpstmt.executeQuery();
                            idpstmt.clearParameters();                        
                      
                            if(genidrs.last()==false){                             
                            sid=""+ans+""+Section.section+""+1;
                            
                  //          System.out.println("sir your sid = "+sid);                    
                            }else{
                                String ss=genidrs.getString("S_ID");
                    //            System.out.println("sidsid "+ss);
                                ss=ss.substring(5);
                                int id=Integer.parseInt(ss);
                                id=id+1;
                         //       System.out.println("id = "+id);
                                sid=""+ans+""+Section.section+""+id;                            
                                }                                 
                            
                  //          System.out.println("sid generated successfully");
                        }   
                        catch(Exception e){
                                System.out.println("Caught by inner: "+e);
                        }                                                                        
                        //******************
                        genidrs=null;
             //           String tab2sid=rs.getString("S_ID"); // tab2sid is used to delete from fee detail table
                        
                        idpstmt=MyLogin.con.prepareStatement("update ADMISSION_TABLE set S_ID=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        
                        idpstmt.setString(1, sid);
                        idpstmt.setString(2, rs.getString("S_ID"));
                        int k=idpstmt.executeUpdate();
                        idpstmt.clearParameters();
                        if(k>0){
                                idTextField.setText(sid);
                            System.out.println("sid updated successfully in admission table"); */
                            /* ******************* For FEE_DETAIL_TABLE********************** */ 
                   /*         if((Integer.parseInt(pre)>2016) && (Integer.parseInt(ans)<2017)){
                                idpstmt=MyLogin.con.prepareStatement("delete from FEE_DETAIL_TABLE where S_ID = ?");
                                
                                System.out.println(""+rs.getString("S_ID")); //TO CHECK WETHER ID CHANGED OR NOT
                                
                                idpstmt.setString(1, rs.getString("S_ID"));
                                int s=idpstmt.executeUpdate();
                                idpstmt.clearParameters();
                                if(s>0)
                                    System.out.println("One Record Deleted from fee detail table");
                                else
                                    System.out.println("problem in deletion");
                            }else if((Integer.parseInt(pre)<2017) && (Integer.parseInt(ans)>2016)){
                                idpstmt=MyLogin.con.prepareStatement("insert into FEE_DETAIL_TABLE(S_ID,PAY1,DATE1,PAY2,DATE2,PAY3,DATE3)values(?,?,?,?,?,?,?)");
                                idpstmt.setString(1,sid);
                                idpstmt.setInt(2, 0);
                                idpstmt.setString(3, " ");
                                idpstmt.setInt(4, 0);
                                idpstmt.setString(5, " ");
                                idpstmt.setInt(6, 0);
                                idpstmt.setString(7, " ");
                                i = idpstmt.executeUpdate();
                                idpstmt.clearParameters();
                               if(i==1)
                                    System.out.println("inserted into fee_detail_table");
                               else    
                                    System.out.println("not inserted into fee_detail_table");
                            }else if(Integer.parseInt(ans)>2016){
                                        idpstmt=MyLogin.con.prepareStatement("update FEE_DETAIL_TABLE set S_ID=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

                                        idpstmt.setString(1, sid);
                                        idpstmt.setString(2, rs.getString("S_ID"));
                                        int l=idpstmt.executeUpdate();
                                        idpstmt.clearParameters();
                                        if(l>0){                                
                                            System.out.println("sid changed from fee_detail_table");
                                        }
                                    } 
                            
                           */     /*     this updation for year after updation of sid      */
                         /*   pstmt=MyLogin.con.prepareStatement("update ADMISSION_TABLE set A_YEAR=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    
                                pstmt.setString(1, ans);
                                pstmt.setString(2, sid);
                                int j = pstmt.executeUpdate();
                                pstmt.clearParameters();
                                if(j>0){
                                    newidLabel.setText("Your id changed because you changed Academic year, Your new id is:  "+sid);
                                    StudentList.sid=""+sid;
                                    AdminControl.year=Integer.parseInt(ans);
                                    ImageProcessing.myRenameAndMove4(rs.getString("FIRST_NAME")+" "+rs.getString("LAST_NAME"),rs.getString("S_ID"),sid);
                                    JOptionPane.showMessageDialog(null, "Academic Year modified successfully\n\n [ "+pre+" ] to [ "+ans+" ]\n\n Your id changed your new id is:  "+sid, "Modify First Name", JOptionPane.PLAIN_MESSAGE);                            
                                    selectData();
                                    setData();      //Because if user changes any record more than one in order to make changes currect value of rs(Resultset should change)                    
                                //    System.out.println("Academic year changed successfully");
                                }
                                else
                                    System.out.println("Academic year not changed");                                
                        }                                     
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Alphabet can never be year,Enter year only", "Modify Year", JOptionPane.ERROR_MESSAGE);
            }
            catch(Exception e){             
                System.out.println("caught by outer of year txt field "+e);
             }
        }
      }  */
    }//GEN-LAST:event_yearTextFieldMouseClicked

    private void sectionTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sectionTextFieldMouseClicked
       
        JOptionPane.showMessageDialog(null, "Not Permitted to modify section because id will change", "Modify", JOptionPane.WARNING_MESSAGE);
   /*   if(MainPage.option==2){
        int i=JOptionPane.showConfirmDialog(null, "It's highly recommended that don't try to change Academic year(session)\nIf you change this,your Id will be changed\n\nDo you want to modify ? ","Modify Record", JOptionPane.CANCEL_OPTION);
        if(i==0){    
            String ans="",pre="";
            try{
                selectData();
                pre=rs.getString("SECTION");
                ans=JOptionPane.showInputDialog(null, "Modify Section", pre);                
                ans=ans.trim().toUpperCase();        
                       
                if(((ans.equals(pre))||(ans.equals(""))||(ans.length()!=1))||(!(ans.equalsIgnoreCase("a")||ans.equalsIgnoreCase("b")||ans.equalsIgnoreCase("c")||ans.equalsIgnoreCase("d")||ans.equalsIgnoreCase("e"))))
                    JOptionPane.showMessageDialog(null, "Wrong input, No chages made", "Modify Record", JOptionPane.ERROR_MESSAGE);
                else{                                       //*****************generating sid
                        String sid="";
                        try{ 
                            genidrs=null;
                            idpstmt=MyLogin.con.prepareStatement("select S_ID from ADMISSION_TABLE where A_YEAR=? and SECTION=? order by S_ID",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            
                            idpstmt.setString(1, ""+AdminControl.year);
                            idpstmt.setString(2, ans);
                            genidrs=idpstmt.executeQuery();
                            idpstmt.clearParameters();                        
                      
                            if(genidrs.last()==false){                             
                            sid=""+AdminControl.year+""+ans+""+1;
                            
                    //        System.out.println("sir your sid = "+sid);                    
                            }else{
                                String ss=genidrs.getString("S_ID");
                    //            System.out.println("sidsid "+ss);
                                ss=ss.substring(5);
                                int id=Integer.parseInt(ss);
                                id=id+1;
                         //       System.out.println("id = "+id);
                                sid=""+AdminControl.year+""+ans+""+id;                            
                                }                                 
                            
                  //          System.out.println("sid generated successfully");
                        }   
                        catch(Exception e){
                                System.out.println("Caught by inner: "+e);
                        }                                                
                        
                        //******************
                        genidrs=null;
                        idpstmt=MyLogin.con.prepareStatement("update ADMISSION_TABLE set S_ID=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        
                        idpstmt.setString(1, sid);
                        idpstmt.setString(2, rs.getString("S_ID"));
                        int k=idpstmt.executeUpdate();
                        idpstmt.clearParameters();
                        if(k>0){
                            idTextField.setText(sid);
                            System.out.println("sid updated successfully"); */
                            /******************** For FEE_DETAIL_TABLE***********************/
                   /*         if(AdminControl.year>2016){
                                idpstmt=MyLogin.con.prepareStatement("update FEE_DETAIL_TABLE set S_ID=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

                                idpstmt.setString(1, sid);
                                idpstmt.setString(2, rs.getString("S_ID"));
                                int l=idpstmt.executeUpdate();
                                idpstmt.clearParameters();
                                if(l>0){                                                        
                                    System.out.println("sid changed from fee_detail_table");
                                }       
                            }
                            pstmt=MyLogin.con.prepareStatement("update ADMISSION_TABLE set SECTION=? where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                    
                                pstmt.setString(1, ans);
                                pstmt.setString(2, sid);
                                int j = pstmt.executeUpdate();
                                pstmt.clearParameters();
                                if(j>0){
                                    newidLabel.setText("Your id changed because you changed Section, Your new id is:  "+sid);
                                    StudentList.sid=""+sid;
                                    Section.section=ans;
                                    ImageProcessing.myRenameAndMove4(rs.getString("FIRST_NAME")+" "+rs.getString("LAST_NAME"),rs.getString("S_ID"),sid);
                                    JOptionPane.showMessageDialog(null, "Section modified successfully\n\n [ "+pre+" ] to [ "+ans+" ]\n\n Your id changed, your new id is:  "+sid, "Modify Section", JOptionPane.PLAIN_MESSAGE);                            
                                    selectData();
                                    setData();      //Because if user changes any record more than one in order to make changes currect value of rs(Resultset should change)                    
                                //    System.out.println("Academic year changed successfully");
                                }
                                else
                                    System.out.println("Section not changed");        
                        }                                     
                }
            }catch(Exception e){             
                System.out.println("caught by outer section txt field "+e);
             }
        }
      }  */
    }//GEN-LAST:event_sectionTextFieldMouseClicked

    private void uploadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadButtonMouseClicked
        // TODO add your handling code here:
        uploadButton.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        try
        {
            file=null;  //file is imported from Admission class
            JFileChooser chooser=new JFileChooser();
            chooser.setCurrentDirectory(new File("."));     // seting current directory
                       // or
        //      chooser.setCurrentDirectory(new File("desktop"));
            int result = chooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION)
            {
                String file_address =chooser.getSelectedFile().getPath();
                file=new File(file_address);

                if((ImageIO.read(file)==null)) // file type
                    JOptionPane.showMessageDialog(null,"Please select .jpg file only");
                else
                {
                    BufferedImage originalimg=ImageIO.read(file);
                    ImageIcon icon=new ImageIcon(ImageProcessing.myResize(originalimg,showImagejLabel.getWidth(),showImagejLabel.getHeight()));
                    showImagejLabel.setIcon(icon);
                    
            //        fst_name+=" "+lst_name;
            //NOTE: Before updating image i don't have to delete existing image because new replaces existing image
                    ImageProcessing.saveImage(rs.getString("FIRST_NAME")+" "+rs.getString("LAST_NAME"),"0",rs.getString("S_ID"));
                }
            }
            else
            JOptionPane.showMessageDialog(null,"Please Select file");
        }catch(Exception ex){JOptionPane.showMessageDialog(null,ex);}
        uploadButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));    
    }//GEN-LAST:event_uploadButtonMouseClicked

    private void FirstButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FirstButtonMouseClicked
        // TODO add your handling code here:
            if(MainPage.option==2)
                newidLabel.setText("");        
        try{
          //  selectData();            
            if(AdminControl.year>2016)
                rs2.first();
            if(rs.first())
                setData();
         //   indicator=1;
        }catch(Exception e){
            System.out.println("problen in first button"+e);
        }
    }//GEN-LAST:event_FirstButtonMouseClicked

    private void LastButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LastButtonMouseClicked
        // TODO add your handling code here:
        if(MainPage.option==2)
                newidLabel.setText("");
        try{
         //   selectData();            
            if(AdminControl.year>2016)
                rs2.last();
            if(rs.last())
                setData();
         //   indicator=1;
        }catch(Exception e){
            System.out.println("problen in last button"+e);
        }
    }//GEN-LAST:event_LastButtonMouseClicked

    private void previousButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseClicked
        // TODO add your handling code here:
        try{
         //   selectData();      
         newidLabel.setText("");        
            if(rs.previous()){
                if(AdminControl.year>2016){
                    rs2.previous();     
                }
                setData();
            }               
            else
                rs.next();
         //   indicator=1;
        }catch(Exception e){
            System.out.println("problen in previous button"+e);
        }
    }//GEN-LAST:event_previousButtonMouseClicked

    private void nextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseClicked
        // TODO add your handling code here:
        try{
          //  selectData();   
          newidLabel.setText("");        
            if(rs.next()){
                if(AdminControl.year>2016){
                    rs2.next();
                }
                setData();
            }    
            else
                rs.previous();
       //     indicator=1;
        }catch(Exception e){
            System.out.println("problen in firt button"+e);
        }
    }//GEN-LAST:event_nextButtonMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        int i=JOptionPane.showConfirmDialog(null, "Are you sure you want to permanently delete this record", "Delete Record", JOptionPane.CANCEL_OPTION);
        if(i==0){
            try{
                pstmt=MyLogin.con.prepareStatement("delete from ADMISSION_TABLE where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                pstmt.setString(1, idTextField.getText().trim());
                int j=pstmt.executeUpdate();
                pstmt.clearParameters();
                if(j>0){
                    System.out.println("One Record Deleted from admission table");   
                    if(AdminControl.year>2016){
                        pstmt=MyLogin.con.prepareStatement("delete from FEE_DETAIL_TABLE where S_ID=?",ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                        pstmt.setString(1, idTextField.getText().trim());
                        int k=pstmt.executeUpdate();
                        pstmt.clearParameters();
                        if(k>0){
                            System.out.println("One Record Deleted from fee detail table");                            
                        }
                    }
                        /* Deleting image */
                        File file = new File(".\\test\\Record\\Student_Images\\Registered\\"+rs.getString("FIRST_NAME")+" "+rs.getString("LAST_NAME")+""+rs.getString("S_ID")+".jpg");                   
                            if(file.delete()) { 
                                System.out.println(file.getName() + " is deleted!");
                            } else {
                                 System.out.println("Delete operation failed.");
                              }
                    System.out.println("student id1 "+rs.getString("S_ID"));
                //    System.out.println(""+rs);                                
               /*     if(rs.next()){                     
                        System.out.println("student id2 "+rs.getString("S_ID"));
                        setData();
                    }else{                     
                        if(rs.previous()){                            
                                if(rs.previous()){                          
                                    System.out.println("student id3 "+rs.getString("S_ID"));
                                     setData();
                                }
                                else
                                    showImagejLabel.setIcon(null);
                        }                                                   
                    } */
                    if(rs.next()){                     
                        System.out.println("student id2 "+rs.getString("S_ID"));
                        idTextField.setText(""+rs.getString("S_ID"));
                        selectData();
                        setData();
                    }else{                     
                        if(rs.previous()){                            
                                if(rs.previous()){                          
                                    System.out.println("student id3 "+rs.getString("S_ID"));
                                    idTextField.setText(""+rs.getString("S_ID"));
                                    selectData();
                                     setData();
                                }
                                else{                                    
                                    showImagejLabel.setIcon(null);
                                    StudentList ob=new StudentList();
                                    ob.setVisible(true);
                                    this.setVisible(false);
                                }                                    
                        }                                                   
                    }
                    
                }else
                    System.out.println("Problem in deletion");
            }catch(Exception e){
                System.out.println("Problem in deletion"+e);
            }            
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        // TODO add your handling code here:
        MainPage.option=0;
        MainPage ob=new MainPage();
        ob.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_mainMenuButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoreDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoreDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoreDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoreDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoreDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FirstButton;
    private javax.swing.JButton LastButton;
    private javax.swing.JTextArea addTextArea;
    private javax.swing.JTextField date1TextField;
    private javax.swing.JTextField date2TextField;
    private javax.swing.JTextField date3TextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField dobTextField;
    private javax.swing.JTextField fnameTextField;
    private javax.swing.JTextField formnoTextField;
    private javax.swing.JTextField fstnameTextField;
    private javax.swing.JTextField genderTextField;
    private javax.swing.JTextField hphoneTextField;
    private javax.swing.JTextField idTextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lstnameTextField;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JTextField mnameTextField;
    private javax.swing.JTextField mobnoTextField;
    private javax.swing.JTextField mstatusTextField;
    private javax.swing.JLabel newidLabel;
    private javax.swing.JButton nextButton;
    private javax.swing.JTextField pay1TextField;
    private javax.swing.JTextField pay2TextField;
    private javax.swing.JTextField pay3TextField;
    private javax.swing.JTextField pgTextField;
    private javax.swing.JButton previousButton;
    private javax.swing.JTextField qualificationTextField;
    private javax.swing.JTextField regdTextField;
    private javax.swing.JTextField sectionTextField;
    private javax.swing.JLabel showImagejLabel;
    private javax.swing.JTextField tenthTextField;
    private javax.swing.JTextField twelthTextField;
    private javax.swing.JTextField ugTextField;
    private javax.swing.JButton uploadButton;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
